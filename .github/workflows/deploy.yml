name: Build and Deploy to S3
on:
  workflow_run:
    workflows: ["Build & Push Docker Image"]
    types:
      - completed
  push:
    branches:
      - master
    paths-ignore: # avoid redeploy on version bump commits
      - 'projects/**'
      - 'infra/**'
      - 'package.json'
      - 'package-lock.json'

env:
  S3_BUCKET: teamsantos-static-websites
  BUILD_DIR: dist
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'master' && 'production' || 'staging' }}
    container:
      image: ghcr.io/${{ github.repository_owner }}/static-websites:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0       # needed for pushing changes
          ref: master          # ensure we are on the branch we want to push to
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Node deps
        run: npm ci
      - name: Build site
        run: npm run build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Download current S3 index.html
        run: aws s3 cp s3://$S3_BUCKET/default/index.html current_index.html || echo "no_existing_file"
      - name: Check if index.html changed
        id: check_diff
        run: |
          if [ -f current_index.html ] && diff -q current_index.html $BUILD_DIR/index.html > /dev/null; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
      - name: Stop if no changes
        if: steps.check_diff.outputs.changed == 'false'
        run: |
          echo "No changes detected in index.html. Skipping deploy."
          exit 0
      - name: Bump package version
        run: npm version patch --no-git-tag-version
      - name: Get new version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Upload versioned build to S3
        run: |
          aws s3 sync $BUILD_DIR s3://$S3_BUCKET/v.${{ steps.get_version.outputs.version }}/ \
            --delete \
            --cache-control "public, max-age=31536000" \
            --exclude "*.html"
          aws s3 sync $BUILD_DIR s3://$S3_BUCKET/v.${{ steps.get_version.outputs.version }}/ \
            --delete \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html" \
            --include "*.html"
      - name: Upload to 'default' (latest)
        run: |
          aws s3 sync $BUILD_DIR s3://$S3_BUCKET/default/ \
            --delete \
            --cache-control "public, max-age=31536000" \
            --exclude "*.html"
          aws s3 sync $BUILD_DIR s3://$S3_BUCKET/default/ \
            --delete \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html" \
            --include "*.html"
      - name: Setup git in container
        run: |
          # Fix git ownership issue
          git config --global --add safe.directory /__w/static-websites/static-websites
          # Set git config
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Commit and push version bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to $(node -p "require('./package.json').version") [skip ci]" || echo "No changes to commit"
          git push origin master
